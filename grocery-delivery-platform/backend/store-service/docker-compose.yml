version: '3.8'

services:
  store-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        - BUILD_DATE=${BUILD_DATE}
        - VCS_REF=${VCS_REF}
        - VERSION=${VERSION}
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
    environment:
      - HOST=${HOST:-0.0.0.0}
      - PORT=${PORT:-8000}
      - DEBUG=${DEBUG:-true}
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
      - MONGODB_URL=${MONGODB_URL:-mongodb://mongodb:27017}
      - MONGODB_DB_NAME=${MONGODB_DB_NAME:-spiceroute}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - CORS_ORIGINS=${CORS_ORIGINS:-["http://localhost:3000"]}
      - RATE_LIMIT_PER_SECOND=${RATE_LIMIT_PER_SECOND:-10}
    depends_on:
      - mongodb
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: ${MEMORY_LIMIT:-512Mi}
          cpus: ${CPU_LIMIT:-1.0}

  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

volumes:
  mongodb_data:
  redis_data: 