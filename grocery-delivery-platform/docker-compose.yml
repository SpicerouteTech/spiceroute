version: '3.8'

services:
  store-service:
    build:
      context: ./backend/store-service
      target: development
    volumes:
      - ./backend/store-service:/app
      - store-service-venv:/opt/pysetup/.venv
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/spiceroute
      - REDIS_URI=redis://redis:6379/0
      - JWT_SECRET=your-secret-key-for-development
      - GOOGLE_CLIENT_ID=your-google-client-id
      - FACEBOOK_CLIENT_ID=your-facebook-client-id
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # MongoDB Service
  mongodb:
    image: mongo:6.0
    container_name: spiceroute-mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: spiceroute
      MONGO_INITDB_ROOT_PASSWORD: spiceroute123
      MONGO_INITDB_DATABASE: spiceroute
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-setup.js:/docker-entrypoint-initdb.d/mongo-setup.js:ro
    networks:
      - spiceroute-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/spiceroute --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # Elasticsearch Service
  elasticsearch:
    image: elasticsearch:8.8.0
    container_name: spiceroute-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - spiceroute-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Backend API (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spiceroute-backend
    restart: always
    depends_on:
      mongodb:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      - APP_NAME=SpiceRoute.ai
      - ENVIRONMENT=development
      - DEBUG=true
      - API_V1_STR=/api/v1
      - PROJECT_NAME=SpiceRoute.ai
      - SECRET_KEY=your-secret-key-here
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - MONGODB_URL=mongodb://spiceroute:spiceroute123@mongodb:27017
      - MONGODB_DB_NAME=spiceroute
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./scripts:/scripts
    networks:
      - spiceroute-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend Service (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: spiceroute-frontend
    restart: always
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api/v1
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - spiceroute-network
    command: npm start

  redis:
    image: redis:7.0-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

networks:
  spiceroute-network:
    driver: bridge

volumes:
  mongodb_data:
  elasticsearch_data:
  redis_data:
  store-service-venv: 